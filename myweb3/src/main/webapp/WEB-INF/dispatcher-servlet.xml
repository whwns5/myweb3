<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- controller -->
	<!-- 컨트롤러 객체 생성 -->
	<!-- <bean id="helloController" class="yong.controller.HelloController"/>
	<bean id="memoController" class="yong.controller.MemoController"/>
	<bean id="memberController" class="yong.controller.MemberController"/>
	<bean id="indexController" class="yong.controller.IndexController"/>
	<bean id="orderController" class="yong.controller.OrderController"/>
	<bean id="paramController" class="yong.controller.ParamController"/>
	<bean id="viewTestController" class="yong.controller.ViewTestController"/>
	<bean id="modelTestController" class="yong.controller.ModelTestController"/>
	<bean id="aniController" class="yong.controller.AniController"/>
	<bean id="fileController" class="yong.controller.FileController"/>
	<bean id="empController" class="yong.controller.EmpController"/> -->
	
	<!-- service -->
	<bean id="memoDao" class="yong.memo.model.MemoDAOImple"/>
	<bean id="memberDao" class="yong.member.model.MemberDAOImple"/>
	<bean id="empDao" class="yong.emp.model.EmpDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"/>
		</constructor-arg>
		<!-- <constructor-arg name="sqlMap" ref="sqlSessionTemplate"/> -->
	</bean>
	<bean id="bbsDao" class="yong.bbs.model.BbsDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"/>
		</constructor-arg>
	</bean>
	
	<bean id="projectDao" class="yong.project.model.ProjectDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"/>
		</constructor-arg>
	</bean>
	
	<!-- <bean id="empDao" class="yong.emp.model.EmpDAOImple">
	</bean> -->
	
	<!-- view -->
	<!-- 스프링에서 기본적으로 제공해주는 클래스 -->
	<!-- 어떤 곳으로 보낼지 안내해주는 클래스 ? -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	
	
	<!-- configs -->
	<!-- 컨트롤러 오토 스캔 -->
	<!-- yong으로 시작하는 패키지 스캔 -->
	<context:component-scan base-package="yong" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/> <!-- @Controller 로 사용하던 클래스 -->
	</context:component-scan>
	<!-- 오토와이어 -->
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
	
	<!-- FileUpload -->
	<!-- 반드시  multipartResolver 이름으로 만들어야 한다. -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize">
			<value>104857600</value> <!-- 100MB -->
		</property>
	</bean>
	
	<!-- DownloadView -->
	<bean id="yongDown" class="yong.view.DownloadView"/>
	<!-- 뷰에 대한 이름을 정해줬을때 jsp 가 아니라  -->
	<!-- 우선 순위를 지정하여 우선  viewResolver 검색하고 해당 jsp가 없으면 BeanNameViewResolver 검사 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="0"/>
	</bean>
	
	<!-- Mybatis -->
	<!-- 1. DataSource-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> <!-- BasicDataSource 는 정보 클래스 -->
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/> <!-- 드라이버 경로 -->
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl"/> <!-- url -->
		<property name="username" value="scott"/>
		<property name="password" value="1234"/>
	</bean>
	<!-- 2. 트랜잭션 관리자 등록 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/> <!-- 어떤 데이터 소스를 관리할지 설정 -->
	</bean>
	<!-- 3. 마이바티스 설정 --> <!-- 사용할 SQL 객체를 미리 만들어놨다가 사용시 빌려주는 개념 -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:/mybatis-config.xml"/> <!-- classpath는 src 부터를 의미한다. -->
	</bean>
	<!-- 리모컨 생성 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"> <!-- 액박이 뜨는 이유 : 기본 생성자가 없는 클래스 -->
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"/>
	</bean>
	
</beans>








